
./build/obj/src/hentry.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <hentry_init>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b bf 00 05 00 00 	mov    rdi,QWORD PTR [rdi+0x500]
   b:	31 c9                	xor    ecx,ecx
   d:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
  11:	48 85 c0             	test   rax,rax
  14:	74 19                	je     2f <hentry_init+0x2f>
  16:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  1d:	00 00 00 
  20:	48 89 c7             	mov    rdi,rax
  23:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  27:	83 c1 1e             	add    ecx,0x1e
  2a:	48 85 c0             	test   rax,rax
  2d:	75 f1                	jne    20 <hentry_init+0x20>
  2f:	03 0f                	add    ecx,DWORD PTR [rdi]
  31:	48 c7 46 20 00 00 00 	mov    QWORD PTR [rsi+0x20],0x0
  38:	00 
  39:	89 c8                	mov    eax,ecx
  3b:	48 89 56 10          	mov    QWORD PTR [rsi+0x10],rdx
  3f:	48 89 46 18          	mov    QWORD PTR [rsi+0x18],rax
  43:	48 c7 06 00 00 00 00 	mov    QWORD PTR [rsi],0x0
  4a:	c3                   	ret    
  4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000050 <hentry_add_spec>:
  50:	f3 0f 1e fa          	endbr64 
  54:	53                   	push   rbx
  55:	c5 f9 6e c2          	vmovd  xmm0,edx
  59:	c5 fa 6f 0e          	vmovdqu xmm1,XMMWORD PTR [rsi]
  5d:	48 89 f3             	mov    rbx,rsi
  60:	c4 e2 79 78 c0       	vpbroadcastb xmm0,xmm0
  65:	c5 f9 74 c1          	vpcmpeqb xmm0,xmm0,xmm1
  69:	c5 f9 d7 c0          	vpmovmskb eax,xmm0
  6d:	85 c0                	test   eax,eax
  6f:	75 3f                	jne    b0 <hentry_add_spec+0x60>
  71:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
  75:	c5 f1 74 c8          	vpcmpeqb xmm1,xmm1,xmm0
  79:	c5 f9 d7 c1          	vpmovmskb eax,xmm1
  7d:	85 c0                	test   eax,eax
  7f:	75 07                	jne    88 <hentry_add_spec+0x38>
  81:	5b                   	pop    rbx
  82:	c3                   	ret    
  83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  88:	f3 0f bc c0          	tzcnt  eax,eax
  8c:	48 98                	cdqe   
  8e:	88 14 06             	mov    BYTE PTR [rsi+rax*1],dl
  91:	48 8b bf 00 05 00 00 	mov    rdi,QWORD PTR [rdi+0x500]
  98:	48 89 ce             	mov    rsi,rcx
  9b:	e8 00 00 00 00       	call   a0 <hentry_add_spec+0x50>
  a0:	48 83 43 20 01       	add    QWORD PTR [rbx+0x20],0x1
  a5:	5b                   	pop    rbx
  a6:	c3                   	ret    
  a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  ae:	00 00 
  b0:	48 8b 97 00 05 00 00 	mov    rdx,QWORD PTR [rdi+0x500]
  b7:	f3 0f bc c0          	tzcnt  eax,eax
  bb:	48 98                	cdqe   
  bd:	48 03 46 18          	add    rax,QWORD PTR [rsi+0x18]
  c1:	48 89 4c c2 10       	mov    QWORD PTR [rdx+rax*8+0x10],rcx
  c6:	5b                   	pop    rbx
  c7:	c3                   	ret    
  c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  cf:	00 

00000000000000d0 <hentry_get_spec>:
  d0:	f3 0f 1e fa          	endbr64 
  d4:	c5 f9 6e c2          	vmovd  xmm0,edx
  d8:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
  df:	c4 e2 79 78 c0       	vpbroadcastb xmm0,xmm0
  e4:	c5 f9 74 06          	vpcmpeqb xmm0,xmm0,XMMWORD PTR [rsi]
  e8:	c5 f9 d7 c0          	vpmovmskb eax,xmm0
  ec:	85 c0                	test   eax,eax
  ee:	74 16                	je     106 <hentry_get_spec+0x36>
  f0:	48 8b 97 00 05 00 00 	mov    rdx,QWORD PTR [rdi+0x500]
  f7:	f3 0f bc c0          	tzcnt  eax,eax
  fb:	48 98                	cdqe   
  fd:	48 03 46 18          	add    rax,QWORD PTR [rsi+0x18]
 101:	4c 8b 44 c2 10       	mov    r8,QWORD PTR [rdx+rax*8+0x10]
 106:	4c 89 c0             	mov    rax,r8
 109:	c3                   	ret    
